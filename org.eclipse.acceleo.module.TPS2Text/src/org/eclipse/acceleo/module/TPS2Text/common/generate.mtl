[comment encoding = UTF-8 /]
[module generate('http://www.example.org/tps')]




[template public generate(aTPS : TPS)]
[comment @main/]
[file('tps.html', false, 'UTF-8')]

<p>Task Rules:</p> 
[for (aRule : TaskRule | aTPS.taskRules) separator('<br/>')]
	[taskRule(aRule)/]
[/for]

<p>Filtering the Task Rules:</p>
[dropdownMenu(aTPS)/]

<p>Task Assignment:</p>
	
[/file]
[/template]

[template public taskRule(aRule : TaskRule)]
IF [expression(aRule.expression)/] THEN [aRule.result/]
[/template]

[template public expression(anExpression : Expression)]
[if (anExpression.oclIsTypeOf(DifficultyExpression))]
[difficultyExpression(anExpression.oclAsType(DifficultyExpression))/]
[elseif (anExpression.oclIsTypeOf(ShiftExpression))]
[shiftExpression(anExpression.oclAsType(ShiftExpression))/]
[elseif (anExpression.oclIsTypeOf(DurationExpression))]
[durationExpression(anExpression.oclAsType(DurationExpression))/]
[elseif (anExpression.oclIsTypeOf(CompoundExpression))]
[compoundExpression(anExpression.oclAsType(CompoundExpression))/]
[else]
[atomicExpression(anExpression.oclAsType(AtomicExpression))/]
[/if]
[/template]

[template public atomicExpression(anAtomic : AtomicExpression)]
[if (anAtomic.oclIsTypeOf(DifficultyExpression))]
[difficultyExpression(anAtomic.oclAsType(DifficultyExpression))/]
[elseif (anAtomic.oclIsTypeOf(ShiftExpression))]
[shiftExpression(anAtomic.oclAsType(ShiftExpression))/]
[else]
[durationExpression(anAtomic.oclAsType(DurationExpression))/]
[/if]
[/template]

[template public difficultyExpression(aDifficulty : DifficultyExpression)]
[aDifficulty.difficulty/]
[/template]

[template public shiftExpression(aShift : ShiftExpression)]
[aShift.shift/]
[/template]

[template public durationExpression(aDuration : DurationExpression)]
[if aDuration.operator = ComparisonOperator :: LESSTHAN]
< [aDuration.minutes/] min
[elseif aDuration.operator = ComparisonOperator :: LESSTHANOREQUAL]
<= [aDuration.minutes/] min
[elseif aDuration.operator = ComparisonOperator :: EQUAL]
= [aDuration.minutes/] min
[elseif aDuration.operator = ComparisonOperator :: GREATERTHANOREQUAL]
>= [aDuration.minutes/] min
[else]
> [aDuration.minutes/] min
[/if]
[/template]

[template public compoundExpression(aCompound : CompoundExpression)]
([expression(aCompound.LHS)/] [aCompound.operator/] [expression(aCompound.RHS)/])
[/template]


[template public dropdownMenu(aTPS : TPS)]
<select name="filter" onchange="filterTaskRules()">
    <option value="ALL">All</option>
    <option value="SENIOR">Senior</option>
    <option value="JUNIOR">Junior</option>
    <option value="TRAINEE">Trainee</option>
    <option value="DAYSHIFT">Day Shift</option>
    <option value="EVENINGSHIFT">Evening Shift</option>
    <option value="NIGHTSHIFT">Night Shift</option>
</select>

[/template]

